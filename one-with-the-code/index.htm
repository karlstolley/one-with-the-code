	<p>
		The central contradiction of computers and writing's tenuous relationship with source can be found in summary form on page 15 of Moore's (1986) <cite>Using Computers in English</cite>, on which Moore cited a passage from Chandler's (1984) book <cite>Young Learners and the Microcomputer</cite>:
	</p>
	<blockquote>
		<p>
			So, whilst it is surely desirable for children and adults to use [authoring systems] when they suit their purposes, if we discourage the learning of general purpose programming languages [such as BASIC]...we will be responsible for creating the technocratic elite which will turn the rest of us into consumers. (Chandler, 1984 in Moore, 1986, p. 15)
		</p>
	</blockquote>
	<p>
		"Nevertheless," Moore responded immediately following that citation, "I feel that, as teachers, we have far more important demands on our time than learning to program a computer" (1986, p. 15). Moore never comes out with what, exactly, those demands are; nor have I ever encountered a satisfactory answer from instructors of digital writing whom I've heard making similar claims at professional conferences and on listservs: What, in Moore's view, might necessarily make any given demand "more important" than preventing the establishment of a "technocratic elite" that "turns the rest of us into consumers"? Ironically, Moore's answer might very well be faith in consumerism itself:
	</p>
	<blockquote>
		<p>
			Let us rather ensure that <em>we</em> are the ones in control of educational software by becoming involved in the development process and rejecting those programs which do not serve our needs. (p. 15)
		</p>
	</blockquote>
	<p>
		On the one hand, Moore appears to have wanted to absolve himself and other teachers from the responsibility that attends learning to program (and therefore, I believe, control) computers. On the other hand, Moore wanted to make an emphasis-in-the-original claim that <em>we</em> should be in control. How? By engaging in the consumerist activity of accepting or rejecting software, either as a product of nebulous "involvement" in development (without programming knowledge, apparently) or, as Chandler explicitly cautioned against, as mere consumers of educational software.
	</p>